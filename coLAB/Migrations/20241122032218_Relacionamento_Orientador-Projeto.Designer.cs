// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using colab.Data;

#nullable disable

namespace colabAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241122032218_Relacionamento_Orientador-Projeto")]
    partial class Relacionamento_OrientadorProjeto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Bolsa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataPrevistaFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PesquisadorId")
                        .HasColumnType("integer");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PesquisadorId")
                        .IsUnique();

                    b.ToTable("Bolsas");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Financiador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Financiadores");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Pesquisador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("Times")
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Pesquisadores");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataPrevistaFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FinanciadorId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Orcamento")
                        .HasColumnType("double precision");

                    b.Property<int>("OrientadorId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FinanciadorId");

                    b.HasIndex("OrientadorId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Bolsista", b =>
                {
                    b.HasBaseType("colabAPI.Business.Models.Entities.Pesquisador");

                    b.Property<int?>("OrientadorId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("integer");

                    b.HasIndex("OrientadorId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Bolsistas", (string)null);
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Orientador", b =>
                {
                    b.HasBaseType("colabAPI.Business.Models.Entities.Pesquisador");

                    b.ToTable("Orientadores");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Bolsa", b =>
                {
                    b.HasOne("colabAPI.Business.Models.Entities.Pesquisador", "Pesquisador")
                        .WithOne("Bolsa")
                        .HasForeignKey("colabAPI.Business.Models.Entities.Bolsa", "PesquisadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pesquisador");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Projeto", b =>
                {
                    b.HasOne("colabAPI.Business.Models.Entities.Financiador", "Financiador")
                        .WithMany("Projetos")
                        .HasForeignKey("FinanciadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("colabAPI.Business.Models.Entities.Orientador", "Orientador")
                        .WithMany()
                        .HasForeignKey("OrientadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Financiador");

                    b.Navigation("Orientador");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Bolsista", b =>
                {
                    b.HasOne("colabAPI.Business.Models.Entities.Pesquisador", null)
                        .WithOne()
                        .HasForeignKey("colabAPI.Business.Models.Entities.Bolsista", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("colabAPI.Business.Models.Entities.Orientador", "Orientador")
                        .WithMany()
                        .HasForeignKey("OrientadorId");

                    b.HasOne("colabAPI.Business.Models.Entities.Projeto", null)
                        .WithMany("Bolsistas")
                        .HasForeignKey("ProjetoId");

                    b.Navigation("Orientador");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Orientador", b =>
                {
                    b.HasOne("colabAPI.Business.Models.Entities.Pesquisador", null)
                        .WithOne()
                        .HasForeignKey("colabAPI.Business.Models.Entities.Orientador", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Financiador", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Pesquisador", b =>
                {
                    b.Navigation("Bolsa");
                });

            modelBuilder.Entity("colabAPI.Business.Models.Entities.Projeto", b =>
                {
                    b.Navigation("Bolsistas");
                });
#pragma warning restore 612, 618
        }
    }
}
